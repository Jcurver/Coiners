{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","res","json","fetchCoinTickers","coinId","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","x","time_close","y","open","toFixed","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","fill","gradient","gradientToColors","stops","tooltip","formatter","value","CoinPrice","styled","div","Price","quotes","USD","percent_change_15m","percent_change_1h","percent_change_1y","percent_change_6h","percent_change_7d","percent_change_12h","percent_change_24h","percent_change_30d","percent_change_30m","percent_from_price_ath","volume_24h","volume_24h_change_24h","Title","h1","props","accentColor","Loader","span","Container","bgColor","textColor","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Ceilbox","Back","button","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","to","Helmet","name","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","basename","process","Theme","LightTheme","GlobalStyle","createGlobalStyle","Box","DLmode","App","useState","setTheme","onClick","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.7c947c28.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((res) => res.json());\n}\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json());\n}\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json());\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((res) => res.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useState } from \"react\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n  x:string;\n  y:number;\n\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\n\n\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n    );\n\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => ({x:price.time_close, y:[price.open.toFixed(3), price.high.toFixed(3), price.low.toFixed(3), price.close.toFixed(3)]})),\n            }\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 3,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"black\"], stops: [0, 100] },\n            },\n            // colors: [\"yellow\"],\n            tooltip: {\n              y: [{\n                formatter: (value) => `$ ${value.toFixed(2)}`,\n              }],\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinTickers } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nconst CoinPrice = styled.div`\n  white-space: pre-wrap;\n`\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\n\n\n\nfunction Price({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <CoinPrice>\n        ath_date: ${data?.quotes.USD.percent_change_15m} <br/>\n        ath_price: ${data?.quotes.USD.percent_change_15m}<br/>\n        market_cap: ${data?.quotes.USD.percent_change_15m}<br/>\n        market_cap_change_24h: ${data?.quotes.USD.percent_change_15m}<br/>\n        percent_change_1h: ${data?.quotes.USD.percent_change_1h}<br/>\n        percent_change_1y: ${data?.quotes.USD.percent_change_1y}<br/>\n        percent_change_6h: ${data?.quotes.USD.percent_change_6h}<br/>\n        percent_change_7d: ${data?.quotes.USD.percent_change_7d}<br/>\n        percent_change_12h: ${data?.quotes.USD.percent_change_12h}<br/>\n        percent_change_15m: ${data?.quotes.USD.percent_change_15m}<br/>\n        percent_change_24h: ${data?.quotes.USD.percent_change_24h}<br/>\n        percent_change_30d: ${data?.quotes.USD.percent_change_30d}<br/>\n        percent_change_30m: ${data?.quotes.USD.percent_change_30m}<br/>\n        percent_from_price_ath: ${data?.quotes.USD.percent_from_price_ath}<br/>\n        volume_24h: ${data?.quotes.USD.volume_24h}<br/>\n        volume_24h_change_24h: ${data?.quotes.USD.volume_24h_change_24h}\n        </CoinPrice>\n\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Switch, Route, useLocation, useParams } from \"react-router\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.bgColor };\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\nconst Ceilbox = styled.div`\n  padding-top: 10px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst Back = styled.div`\n  font-size: 20px;\n  a {\n    display: block;\n  }\n`;\nconst DLmode = styled.button`\n  padding: 10px;\n  background-color: blue;\n  color: red;\n  border-radius: 10px;\n`;\n\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\n\nfunction Coin() {\n\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  // const [loading, setLoading] = useState(true);\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n  // useEffect(() => {\n  //   (async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Ceilbox>\n        <Back>\n          <Link to={`/`}>&larr; Home</Link>\n        </Back>\n\n      </Ceilbox>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>$ {tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId}/>\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;","import { BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\n\nexport const Theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#8c7ae6\",\n\n};\nexport const LightTheme: DefaultTheme = {\n  bgColor: \"#f5f6fa\",\n  textColor: \"#2f3640\",\n  accentColor: \"#8c7ae6\",\n\n};\n\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Theme, LightTheme } from \"./theme\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst Box = styled.div`\n  position: fixed;\n`;\nconst DLmode = styled.button`\n  margin: 10px 0px 0px 10px;\n  padding: 20px;\n  border-radius: 20px;\n`;\n\nfunction App() {\n  const [theme, setTheme] =useState(true);\n\n  const changeTheme = () =>{\n    setTheme(!theme)\n  }\n  return (\n    <>\n      <ThemeProvider theme={theme ? Theme : LightTheme}>\n        <Box>\n          <DLmode onClick={changeTheme}>{theme ? \"DarkMode\" : \"LightMode\"}</DLmode>\n        </Box>\n        <GlobalStyle />\n        <Router/>\n        <ReactQueryDevtools initialIsOpen={true}></ReactQueryDevtools>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}